<comment>
problem   = ring diffusion
reference =
configure = --prob=ring_diff --coord cylindrical -b (-sts)

<job>
problem_id = RingDiffCyl  # problem ID: basename of output filenames

<output1>
file_type = hst   # History data dump
dt        = 0.01  # time increment between outputs

<output2>
file_type  = hdf5        # hdf5 data dump
variable   = prim
dt         = 1.e-1      # time increment between outputs

<time>
cfl_number = 0.3       # The Courant, Friedrichs, & Lewy (CFL) Number
nlim       = -1        # cycle limit
tlim       = 1         # time limit
integrator  = vl2      # time integration algorithm
xorder      = 2        # order of spatial reconstruction
ncycle_out  = 1        # interval for stdout summary info
sts_integrator = rkl2  # time integration algorithm
dt_diagnostics = 0
sts_max_dt_ratio = -1

<mesh>
nx1    = 128       # Number of zones in X1-direction
x1min  = 0.1      # minimum value of X1
x1max  = 1.0       # maximum value of X1
ix1_bc = outflow  # inner-X1 boundary flag
ox1_bc = outflow  # outer-X1 boundary flag

nx2    = 128       # Number of zones in X2-direction
x2min  = 0.0      # minimum value of X2
x2max  = 6.2831853       # maximum value of X2
ix2_bc = periodic  # inner-X2 boundary flag
ox2_bc = periodic  # outer-X2 boundary flag

nx3    = 1         # Number of zones in X3-direction
x3min  = -0.1      # minimum value of X3
x3max  = 0.1       # maximum value of X3
ix3_bc = outflow  # inner-X3 boundary flag
ox3_bc = outflow  # outer-X3 boundary flag

refinement  = None

<meshblock>
nx1 = 64
nx2 = 64
nx3 = 1

<hydro>
gamma = 2.0
iso_sound_speed = 1.0         # isothermal sound speed
active = diffusion

<problem>
iprob   = 1        # 1: ring segment 2: gaussian
amp     = 1.       # amplitude
t0      = 0.1
kappa_iso   = 0.0
kappa_aniso = 1.0
